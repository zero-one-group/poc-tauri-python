{
  "root": true,
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/jsx-runtime",
    "plugin:prettier/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "ignorePatterns": [
    "node_modules",
    "src-tauri",
    "postcss.config.js",
    "tailwind.config.js",
    ".eslintrc",
    ".cache",
    "*.d.ts",
    "*.cjs",
    "build",
    "dist",
    "out"
  ],
  "parser": "@typescript-eslint/parser",
  "settings": {
    "react": {
      "version": "detect"
    },
    "tailwindcss": {
      "callees": ["classnames", "clsx", "ctl", "cn"],
      "removeDuplicates": true
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["react", "@typescript-eslint", "simple-import-sort", "prettier"],
  "rules": {
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-types": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "caughtErrorsIgnorePattern": "^_"
      }
    ],
    "react/display-name": "off",
    "react/prop-types": "off",
    "tailwindcss/no-custom-classname": "off",
    "prettier/prettier": [
      "warn",
      {
        "endOfLine": "auto",
        "singleQuote": true
      }
    ],
    // Sort imported libraries
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages from `node` come first.
          ["^node:"],
          // Packages `react` related packages come after.
          ["^react", "^@tauri-apps(/.*|$)", "^@?\\w"],
          // Internal packages.
          ["^(@/components)(/.*|$)"],
          ["^(@/screens)(/.*|$)"],
          ["^(@/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.?(css)$"]
        ]
      }
    ]
  }
}
